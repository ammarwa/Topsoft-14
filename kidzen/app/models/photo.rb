# This is Photo model used to add photos to database 
# it is a subclass of Post Model 
# Attributes : url
#             description
#             id (Auto generated by the database)
# Relations : It has many Comments,Tags
# Author : Hussien M. Eloy
class Photo < Post
	attr_accessor :uploaded_photo #used to upload photos in controller class
	validates_presence_of :url
	validates :url, :format => URI::regexp(%w(http https)) # this line used to check if a url is valid url
	has_many :comments, :tags


 # This function is used to initialize attributes of the model 
 # as Rails 4 prevent listing accessible fields in model
 # so it depends on Something called strong parameters to protect Accessibility
 # Author : Hussien M. Eloy
	def photo_params
    params.require(:photo).permit(:description,:url)
  end


  # This function simply returns the photo ID (Auto generated)
  # Author : Hussien M. Eloy
	def get_id 
	self.id
	end


  # This function just returns the photo description attribute
  # Author : Hussien M. Eloy
	def get_description
		self.description
	end


  # This function should return The comments associated with the photo
  # Author : Hussien M. Eloy	
	def get_comments
		self.comments
	end

	# This function should return The tags associated with the photo
    # Author : Hussien M. Eloy	
	def get_tags
		self.tags
	end


	# This function should write comments to the given photo
	# Author : Hussien M. Eloy
	def write_comment 
	end


    # This function should tag A registered user into the given photo
	# Author : Hussien M. Eloy
    def tag_someone
	end


    # This function should over-ride the description of The given photo
    # Author : Hussien M. Eloy
	def edit_description(description)
		self[:description] = description
	end


	# This function is used to access the attribute photo_name in Controller class
	# Author : Hussien M. Eloy 
    def photo_name
    	self[:photo_name] 
    end


    # This function is used to access the attribute photo_type in Controller class
	# Author : Hussien M. Eloy 
    def photo_type
    	self[:photo_type] 
    end


end
